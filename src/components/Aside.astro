---
import alertIcon from "./Alert/Assets/alert-icon.svg"
import infoIcon from "./Alert/Assets/info-icon.svg"
import dangerIcon from "./Alert/Assets/danger-icon.svg"
import tipIcon from "./Alert/Assets/tip-icon.svg"
export type Props = {
  type?: "note" | "tip" | "caution" | "danger"
  title?: string
}

const { type = "note", title = type } = Astro.props as Props

// SVG icon paths based on GitHub Octicons
const icons = {
  note: infoIcon,
  tip: tipIcon,
  caution: alertIcon,
  danger: dangerIcon,
}
---

<aside class={`content ${type}`} aria-label={title}>
  <div class="icon">
    <img src={icons[type]} style="width: 1.5em;height: 1.5em;" alt={type} />
  </div>
  <section class="asideContent">
    <p class="title heading-100" aria-hidden="true">
      {title}
    </p>
    <slot />
  </section>
</aside>

<style>
  aside {
    /* Indicates the aside boundaries for forced colors users, transparent is changed to a solid color */
    outline: 1px solid transparent;

    --aside-bg: var(--color-background-info);
    background-color: var(--aside-bg);

    /* display: flex; */
    @apply p-[30px] gap-4 rounded-[27px] text-info mb-[1rem];
  }

  aside p.title {
    font-weight: bold;
    font-size: 16px;
  }

  aside p {
    @apply text-info;
  }

  .icon {
    flex-shrink: 0;
    width: 1.5em;
    margin-bottom: 10px;
  }
  .icon svg {
    vertical-align: middle;
    fill: currentcolor;
  }

  aside :global(a),
  aside :global(a > code:not([class*="language"])) {
    @apply text-link underline;
  }

  aside :global(p),
  aside.content :global(ul) {
    @apply text-text;
  }

  :global(.theme-dark) aside :global(code:not([class*="language"])) {
    @apply text-code-text;
  }

  aside :global(pre) {
    margin-left: 0;
    margin-right: 0;
  }

  .tip {
    --aside-bg: #eee;
  }

  .caution {
    --aside-bg: var(--color-background-warning);
  }

  .danger {
    --aside-bg: var(--color-background-error);
  }

  .asideContent :global(p) {
    margin-bottom: 0;
    font-size: 16px;
    line-height: 25px;
  }

  .asideContent :global(p + p) {
    @apply mt-2;
  }
</style>
